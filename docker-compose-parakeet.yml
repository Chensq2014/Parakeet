version: "3.1"
services:
  es:
    hostname: es
    image: es:latest
    restart: always
    # volumes:
    #   - /home/es:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ports:
      - "0.0.0.0:9200:9200"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - parakeet
  kibana:
    hostname: kibana
    image: docker.elastic.co/kibana/kibana:latest
    environment:
      ELASTICSEARCH_HOSTS: http://es:9200
    ports:
      - 5601:5601
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - parakeet
  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3.8.19-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=akso
    ports:
      - "15672:15672"
      - "5672:5672"
    # volumes:
    #   - /home/rabbitmq:/var/lib/rabbitmq
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - parakeet
  redis:
    hostname: redis
    image: redis:latest
    ports:
      - "6379:6379"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - parakeet
  nacos:
    hostname: nacos
    image: nacos:latest
    ports:
      - "8848:8848"
      - "9848:9848"
    volumes:
       - D:/docker/nacos/data:/home/nacos/data
    networks:
       - parakeet
    environment:
       - MODE=standalone
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  mysql:
    hostname: mysql
    image: mysql:latest
    command:
      --default-authentication-plugin=mysql_native_password
      --innodb-doublewrite=0
      --lower-case-table-names=1
      --innodb-page-size=64K
      --local_infile=1
    ports: 
      - 3306:3306
    volumes:
      - D:/Database/mysql:/var/lib/mysql
    networks: 
      - parakeet    
    environment:
      MYSQL_ROOT_PASSWORD: parakeet123456
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      #restart_policy:
      #  condition: on-failuredocker stack deploy -c docker-compose-parakeet.yml parakeet
      #  docker stack deploy -c docker-compose-parakeet.yml parakeet
networks:
  parakeet:
