
<div id="grid-section" class="show-grid"></div>
@section scripts
{
    <script type='text/javascript'>

        $(function() {

            var laborTypeSelects = dxConfig.selectEnumBox('/api/parakeet/enum/enum-type-item-key-name-descriptions?Name=LaborType');
            initSectionGrid();

            function initSectionGrid() {
                var config = dxConfig.editGrid('/api/parakeet/section');
                config.gridId = 'grid-section';
                config.gridSelector = '#' + config.gridId;
                config.editing.allowAdding = true;
                config.editing.allowDeleting = true;
                config.editing.allowUpdating = true;
                config.searchPanel.visible = true;
                config.groupPanel = {
                    visible: true,
                    emptyPanelText: '拖动列头到此分组'
                };
                config.grouping = {
                    autoExpandAll: true
                };
                //config.remoteOperations.summary = false;
                //config.remoteOperations.grouping = true;
                //config.remoteOperations.groupPaging = true;
                //config.remoteOperations= {
                //    summary: true,
                //    grouping: true,
                //    groupPaging: false,
                //    paging: false,
                //    sorting: false,
                //    filtering: false
                //};

                config.columns = [
                    {
                        dataField: 'id',
                        caption: 'Id',
                        allowEditing: false,
                        visible: false //, dataType: 'Guid'
                    },
                    {
                        dataField: 'name',
                        alignment: 'center',
                        allowFiltering: false,
                        allowHeaderFiltering: false,
                        allowGrouping: true,
                        caption: '名称',
                        validationRules: [
                            { type: 'required', message: '名称为必填项' },
                            //{ type: 'pattern', pattern: '^[^0-9]+$', message: '房号避免使用纯数字' },
                            { type: 'fieldUnique', checkUrl: '/api/parakeet/section/check-field', message: '名称重复' }
                            //{ type: 'fieldsUnique', checkUrl: '/api/parakeet/sectionWorker/check-fields', fields: ['SectionId'], message: '小区名重复' }
                        ]
                    },
                    {
                        dataField: 'locationAreaId',
                        alignment: 'center',
                        allowFiltering: false,
                        allowHeaderFiltering: false,
                        allowGrouping: true,
                        //allowEditing: false,
                        caption: '区域',
                        lookup: dxConfig.selectBox('/api/parakeet/location-area/location-area-select-box?cancelValid=true'),
                        validationRules: [{ type: "required", message: "区域必填项" }]
                    },
                    {
                        dataField: 'projectId',
                        alignment: 'center',
                        allowFiltering: false,
                        allowHeaderFiltering: false,
                        allowGrouping: true,
                        //allowEditing: false,
                        caption: '项目',
                        lookup: dxConfig.selectBoxTvExchange('/api/parakeet/project/project-select-list'),
                        validationRules: [{ type: "required", message: "项目必填项" }]
                    },
                    {
                        dataField: 'address',
                        alignment: 'center',
                        allowFiltering: false,
                        allowHeaderFiltering: false,
                        allowExporting: false,
                        allowGrouping: true,
                        caption: '地址'
                    },
                    {
                        dataField: 'description',
                        alignment: 'center',
                        allowFiltering: false,
                        allowHeaderFiltering: false,
                        allowExporting: false,
                        allowGrouping: true,
                        caption: '描述'
                    },
                    {
                        dataField: 'costTotal',
                        alignment: 'center',
                        caption: '人工成本',
                        cssClass: 'orange',
                        //format: "currency",
                        dataType: 'number',
                        valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                        allowHeaderFiltering: false,
                        allowGrouping: true,
                        allowEditing: false
                    },
                    {
                        dataField: 'profitTotal',
                        alignment: 'center',
                        caption: '收益合计',
                        cssClass: 'orange',
                        //format: "currency",
                        dataType: 'number',
                        valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                        allowHeaderFiltering: false,
                        allowGrouping: true,
                        allowEditing: false
                    },
                    {
                        dataField: 'workerTotal',
                        alignment: 'center',
                        caption: '总计',
                        cssClass: 'orange',
                        //format: "currency",
                        dataType: 'number',
                        valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                        allowHeaderFiltering: false,
                        allowGrouping: true,
                        allowEditing: false
                    }
                ];
                config.summary = {
                    totalItems: [
                        {
                            column: 'costTotal',
                            summaryType: 'sum',
                            //valueFormat: 'currency',
                            valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                            alignByColumn: 'true', //alignment: 'right',
                            showInGroupFooter: true,
                            cssClass: 'red',
                            //showInColumn: 'total',
                            skipEmptyValues: true,
                            displayFormat: '用工汇总:{0}'
                            //customizeText: function (data) {
                            //    debugger;
                            //    return data.value;
                            //}
                        },
                        {
                            column: 'profitTotal',
                            summaryType: 'sum',
                            //valueFormat: 'currency',
                            valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                            alignByColumn: 'true', //alignment: 'right',
                            showInGroupFooter: true,
                            cssClass: 'red',
                            //showInColumn: 'total',
                            skipEmptyValues: true,
                            displayFormat: '利润汇总:{0}'
                            //customizeText: function (data) {
                            //    debugger;
                            //    return data.value;
                            //}
                        },
                        {
                            column: 'workerTotal',
                            summaryType: 'sum',
                            //valueFormat: 'currency',
                            valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                            alignByColumn: 'true', //alignment: 'right',
                            showInGroupFooter: true,
                            cssClass: 'red',
                            //showInColumn: 'total',
                            skipEmptyValues: true,
                            displayFormat: '汇总:{0}'
                            //customizeText: function (data) {
                            //    debugger;
                            //    return data.value;
                            //}
                        }
                    ],
                    groupItems: [
                        {
                            column: 'name',
                            summaryType: 'sum', //'count',//
                            displayFormat: "{0} 分组汇总"
                        }
                    ]
                };
                config.export = {
                    enabled: true,
                    fileName: "各地块汇算表",
                    texts: {
                        //excelFormat:"导出",
                        exportAll: "导出所有数据",
                        exportSelectedRows: "导出选中行"
                    }
                };
                config.onInitNewRow = function(e) {
                    //e.data.key=new uuid();
                };
                config.onContentReady = function(e) {

                };

                config.onEditorPreparing = function(e) {
                    //&& e.parentType === 'filterRow'
                    if (e.dataField === 'locationAreaId') {
                        e.editorName = 'dxDropDownBox';
                        var dropDownBoxConfig =
                            dxConfig.dropDownBox('/api/parakeet/location-area/location-area-tree?cancelValid=true');
                        dropDownBoxConfig.width = '100%';
                        //dropDownBoxConfig.valueExpr = 'id';
                        //dropDownBoxConfig.displayExpr = 'name';
                        dropDownBoxConfig.placeholder = e.lookup.valueMap[e.value];
                        var treeView = getDxTreeViewConfig({
                            selectionMode: 'single', //单选
                            height: 500
                        });
                        getDxDropDownBoxConfig(dropDownBoxConfig, treeView, 'TreeView');

                        dropDownBoxConfig.onValueChanged = function(arg) {
                            if (arg.value != null) {
                                e.setValue(arg.value);
                                //$(e.editorElement).html(e.lookup.valueMap[arg.value]);
                                //$(e.editorElement).text(e.lookup.valueMap[arg.value]);
                                $(e.editorElement)[0].innerHTML = e.lookup.valueMap[arg.value];
                                //$(e.editorElement)[0].outerText = e.lookup.valueMap[arg.value];
                            }
                        };
                        e.editorOptions = dropDownBoxConfig;
                    }
                };

                config.onToolbarPreparing = function(e) {
                    //var items = e.toolbarOptions.items;
                    //$.each(items,
                    //    function (index, item) {
                    //        if (item.name === 'addRowButton') {
                    //            //var addFunc = item.options.onClick;
                    //            item.options.onClick = null;
                    //            item.options.onClick = function (f) {
                    //                //f.event.stopPropagation();
                    //                //跳转到联系我们页面
                    //                window.location = '/api/parakeet/section/create';
                    //            }
                    //        }
                    //    });
                    //items.push({
                    //    widget: 'dxButton',
                    //    options: {
                    //        text: '查看更多',
                    //        onClick: function (f) {
                    //            f.event.stopPropagation();
                    //            e.component.beginUpdate();
                    //            var visible = !e.component.columnOption('phone', 'visible');
                    //            e.component.columnOption('phone', 'visible', visible);
                    //            e.component.columnOption('qNumber', 'visible', visible);
                    //            e.component.columnOption('email', 'visible', visible);
                    //            e.component.columnOption('readTime', 'visible', visible);
                    //            if (visible) {
                    //                f.component.option('text', '隐藏');
                    //            } else {
                    //                f.component.option('text', '查看更多');
                    //            }
                    //            e.component.endUpdate();
                    //        }
                    //    },
                    //    location: 'after'
                    //});
                };
                // config.refreshFunc = function(component) {
                //     component.refresh();
                // };
                config.masterDetail = {
                    enabled: true,
                    template: function(container, info) {
                        var detailConfig = getSectionWorkerConfig(info.data.id);
                        detailConfig.parentComponent = config.component;
                        detailConfig.gridSelector = 'grid-master-section-' + info.data.id;
                        $("<div class='section-master-grid' id='" + detailConfig.gridSelector + "'>")
                            .dxDataGrid(detailConfig)
                            .appendTo(container);

                        detailConfig.component = $('#' + detailConfig.gridSelector).dxDataGrid(detailConfig).dxDataGrid('instance');
                    }
                };

                gridSugar(config);
                config.component = $(config.gridSelector).dxDataGrid(config).dxDataGrid('instance');

            }

            function getSectionWorkerConfig(sectionId) {
                var getUrl = '/api/parakeet/section-Worker/get?id=' + sectionId;
                var config = dxConfig.editGrid(getUrl);
                config.dataSource = DevExpress.data.AspNet.createStore({
                    key: 'id',
                    loadUrl: getUrl,
                    insertUrl: '/api/parakeet/section-Worker/insert',
                    updateUrl: '/api/parakeet/section-Worker/update',
                    deleteUrl: '/api/parakeet/section-Worker/delete'
                });
                config.editing.allowAdding = true;
                config.editing.allowUpdating = true;
                config.editing.allowDeleting = true;
                config.columns = [
                    {
                        dataField: 'id',
                        caption: 'Id',
                        allowEditing: false,
                        visible: false //, dataType: 'Guid'
                    },
                    {
                        dataField: 'name',
                        alignment: 'center',
                        caption: '名称',
                        allowHeaderFiltering: false,
                        validationRules: [
                            { type: 'required', message: '名称为必填项' }
                            // { type: 'pattern', pattern: '^[^0-9]+$', message: '名称避免使用纯数字' }
                        ]
                    },
                    {
                        dataField: 'coverArea',
                        alignment: 'center',
                        caption: '面积m²',
                        dataType: 'number',
                        valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                        allowHeaderFiltering: false,
                        allowExporting: false,
                        allowEditing: true
                    },
                    {
                        dataField: 'workerId',
                        alignment: 'center',
                        allowFiltering: false,
                        allowHeaderFiltering: false,
                        allowGrouping: true,
                        //allowEditing: false,
                        caption: '工人',
                        lookup: dxConfig.selectBoxTvExchange('/api/parakeet/worker/worker-Select-List'),
                        validationRules: [{ type: "required", message: "工人必填项" }]
                    },
                    {
                        dataField: 'workerTypeId',
                        alignment: 'center',
                        allowFiltering: false,
                        allowHeaderFiltering: false,
                        allowGrouping: true,
                        //allowEditing: false,
                        caption: '工种',
                        lookup: dxConfig.selectBoxTvExchange('/api/parakeet/worker-Type/worker-Type-SelectList'),
                        validationRules: [{ type: "required", message: "工种必填项" }]
                    },
                    {
                        dataField: 'laborType',
                        alignment: 'center',
                        allowFiltering: false,
                        allowHeaderFiltering: false,
                        allowGrouping: true,
                        //allowEditing: false,
                        caption: '劳务类型',
                        lookup: laborTypeSelects,
                        validationRules: [{ type: "required", message: "劳务类型必填项" }]
                    },
                    {
                        dataField: 'isTemporary',
                        alignment: 'center',
                        caption: '是否临时',
                        allowExporting: false,
                        allowHeaderFiltering: false,
                        allowEditing: true
                    },
                    {
                        dataField: 'description',
                        alignment: 'center',
                        allowFiltering: false,
                        allowHeaderFiltering: false,
                        allowExporting: false,
                        caption: '描述'
                    },
                    {
                        dataField: 'costTotal',
                        alignment: 'center',
                        caption: '工价',
                        cssClass: 'orange',
                        //format: "currency",
                        dataType: 'number',
                        valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                        allowHeaderFiltering: false,
                        allowGrouping: true,
                        allowEditing: false
                    },
                    {
                        dataField: 'profitTotal',
                        alignment: 'center',
                        caption: '利润',
                        cssClass: 'orange',
                        //format: "currency",
                        dataType: 'number',
                        valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                        allowHeaderFiltering: false,
                        allowGrouping: true,
                        allowEditing: false
                    },
                    {
                        dataField: 'total',
                        alignment: 'center',
                        caption: '总计',
                        cssClass: 'orange',
                        dataType: 'number',
                        valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                        allowHeaderFiltering: false,
                        allowEditing: false
                    }
                ];
                config.summary = {
                    totalItems: [
                        {
                            column: 'coverArea',
                            summaryType: 'sum',
                            //valueFormat: 'currency',
                            //valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                            displayFormat: '总面积:{0}',
                            alignByColumn: 'true', //alignment: 'right',
                            //showInGroupFooter: true,
                            cssClass: 'red'
                            //customizeText: function (data) {
                            //    debugger;
                            //    return data.value;
                            //}
                        },
                        {
                            column: 'costTotal',
                            summaryType: 'sum',
                            valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                            displayFormat: '工人总工价:{0}',
                            alignByColumn: 'true', //alignment: 'right',
                            showInGroupFooter: true,
                            cssClass: 'red'
                        }, {
                            column: 'profitTotal',
                            summaryType: 'sum',
                            valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                            displayFormat: '工人总利润:{0}',
                            alignByColumn: 'true', //alignment: 'right',
                            showInGroupFooter: true,
                            cssClass: 'red'
                        },
                        {
                            column: 'total',
                            summaryType: 'sum',
                            valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                            displayFormat: '工人总计:{0}',
                            alignByColumn: 'true', //alignment: 'right',
                            showInGroupFooter: true,
                            cssClass: 'red'
                        }
                    ]
                };
                config.export = {
                    enabled: true,
                    fileName: "地块工人汇算表",
                    texts: {
                        //excelFormat:"导出",
                        exportAll: "导出所有数据",
                        exportSelectedRows: "导出选中行"
                    }
                };
                config.onInitNewRow = function(e) {
                    e.data.sectionId = sectionId;
                };
                config.onContentReady = function(e) {
                    //
                };
                // config.refreshFunc = function(component) {
                //     component.refresh();
                //     if (component._options.parentComponent) {
                //         component._options.parentComponent.refresh();
                //     }
                // };
                config.masterDetail = {
                    enabled: true,
                    template: function(container, info) {
                        var detailConfig = getWorkerDetailConfig(info.data.id);
                        detailConfig.parentComponent = config.component;
                        detailConfig.gridSelector = 'grid-master-sectionWorker-' + info.data.id;
                        $("<div class='sectionWorker-master-grid' id='" + detailConfig.gridSelector + "'>")
                            .dxDataGrid(detailConfig)
                            .appendTo(container);

                        detailConfig.component = $('#' + detailConfig.gridSelector).dxDataGrid(detailConfig).dxDataGrid('instance');
                    }
                };

                gridSugar(config);
                return config;
            }

            function getWorkerDetailConfig(sectionWorkerId) {
                var getUrl = '/api/parakeet/section-Worker-Detail/get?id=' + sectionWorkerId;
                var config = dxConfig.editGrid(getUrl);
                config.dataSource = DevExpress.data.AspNet.createStore({
                    key: 'id',
                    loadUrl: getUrl,
                    insertUrl: '/api/parakeet/section-Worker-Detail/insert',
                    updateUrl: '/api/parakeet/section-Worker-Detail/update',
                    deleteUrl: '/api/parakeet/section-Worker-Detail/delete'
                });
                config.editing.allowAdding = true;
                config.editing.allowUpdating = true;
                config.editing.allowDeleting = true;
                config.columns = [
                    {
                        dataField: 'id',
                        caption: 'Id',
                        allowEditing: false,
                        visible: false //, dataType: 'Guid'
                    },
                    {
                        dataField: 'positionName',
                        alignment: 'center',
                        caption: '工作位置名称',
                        allowHeaderFiltering: false,
                        allowExporting: false,
                        validationRules: [
                            { type: 'required', message: '名称为必填项' },
                            //{ type: 'pattern', pattern: '^[^0-9]+$', message: '名称避免使用纯数字' },
                            {
                                type: 'fieldsUnique',
                                checkUrl: '/api/parakeet/section-Worker-Detail/check-fields',
                                fields: ["SectionWorkerId"],
                                message: '名称重复'
                            }
                        ]
                    },
                    {
                        dataField: 'unitPrice',
                        alignment: 'center',
                        caption: '单价(元)',
                        dataType: 'number',
                        valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                        allowHeaderFiltering: false,
                        allowEditing: true
                    },
                    {
                        dataField: 'unitProfit',
                        alignment: 'center',
                        caption: '利润(元)',
                        dataType: 'number',
                        valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                        allowHeaderFiltering: false,
                        allowEditing: true
                    },
                    {
                        dataField: 'amount',
                        alignment: 'center',
                        caption: '数量',
                        dataType: 'number',
                        valueFormat: { type: 'fixedPoint', precision: 2 }, //'count',
                        allowHeaderFiltering: false,
                        allowEditing: true
                    },
                    {
                        dataField: 'startDate',
                        width: 120,
                        dataType: 'date', //allowSetTimeRange:false,
                        caption: "开始日期",
                        validationRules: [{ type: "required", message: "开始日期必填项" }],
                        cellTemplate: function(ele, info) {
                            info.data.startDate = T(info.data.startDate, "yyyy/MM/dd");
                            $(ele).append(info.data.startDate);
                        }
                    },
                    {
                        dataField: 'endDate',
                        width: 120,
                        dataType: 'date', //allowSetTimeRange:false,
                        caption: "结束日期",
                        validationRules: [{ type: "required", message: "结束日期必填项" }],
                        cellTemplate: function(ele, info) {
                            info.data.endDate = T(info.data.endDate, "yyyy/MM/dd");
                            $(ele).append(info.data.endDate);
                        }
                    },
                    {
                        dataField: 'description',
                        alignment: 'center',
                        allowFiltering: false,
                        allowHeaderFiltering: false,
                        allowExporting: false,
                        caption: '描述'
                    },
                    {
                        dataField: 'costTotal',
                        alignment: 'center',
                        caption: '工价',
                        cssClass: 'orange',
                        //format: "currency",
                        dataType: 'number',
                        valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                        allowHeaderFiltering: false,
                        allowGrouping: true,
                        allowEditing: false
                    },
                    {
                        dataField: 'profitTotal',
                        alignment: 'center',
                        caption: '利润',
                        cssClass: 'orange',
                        //format: "currency",
                        dataType: 'number',
                        valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                        allowHeaderFiltering: false,
                        allowGrouping: true,
                        allowEditing: false
                    },
                    {
                        dataField: 'total',
                        alignment: 'center',
                        caption: '合计',
                        cssClass: 'orange',
                        dataType: 'number',
                        valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                        allowHeaderFiltering: false,
                        allowEditing: false
                    }
                ];
                config.summary = {
                    totalItems: [
                        {
                            column: 'costTotal',
                            summaryType: 'sum',
                            valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                            displayFormat: '工价:{0}',
                            alignByColumn: 'true', //alignment: 'right',
                            showInGroupFooter: true,
                            cssClass: 'purple'
                        }, {
                            column: 'profitTotal',
                            summaryType: 'sum',
                            valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                            displayFormat: '利润:{0}',
                            alignByColumn: 'true', //alignment: 'right',
                            showInGroupFooter: true,
                            cssClass: 'purple'
                        },
                        {
                            column: 'total',
                            summaryType: 'sum',
                            valueFormat: { type: 'fixedPoint', precision: 4 }, //'count',
                            displayFormat: '合计:{0}',
                            alignByColumn: 'true', //alignment: 'right',
                            showInGroupFooter: true,
                            cssClass: 'purple'
                        }
                    ]
                };
                config.export = {
                    enabled: true,
                    fileName: "工人考勤明细汇算表",
                    texts: {
                        //excelFormat:"导出",
                        exportAll: "导出所有数据",
                        exportSelectedRows: "导出选中行"
                    }
                };
                config.onInitNewRow = function(e) {
                    e.data.sectionWorkerId = sectionWorkerId;
                };
                config.onContentReady = function(e) {
                    //
                };
                // config.refreshFunc = function(component) {
                //     component.refresh();
                //     if (component._options.parentComponent) {
                //         component._options.parentComponent.refresh();

                //         // if (component._options.parentComponent._options.parentComponent) {
                //         //     component._options.parentComponent._options.parentComponent.refresh();
                //         // }
                //     }
                // };
                gridSugar(config);
                return config;
            }

        });


    </script>
}

